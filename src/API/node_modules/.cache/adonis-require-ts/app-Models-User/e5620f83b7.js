"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", { value: true });
const luxon_1 = require("luxon");
const Hash_1 = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Core/Hash"));
const Trip_1 = __importDefault(global[Symbol.for('ioc.use')]("App/Models/Trip"));
const Orm_1 = global[Symbol.for('ioc.use')]("Adonis/Lucid/Orm");
class User extends Orm_1.BaseModel {
    static async hashPassword(user) {
        if (user.$dirty.password) {
            user.password = await Hash_1.default.make(user.password);
        }
    }
}
__decorate([
    (0, Orm_1.column)({ isPrimary: true }),
    __metadata("design:type", Number)
], User.prototype, "id", void 0);
__decorate([
    (0, Orm_1.column)(),
    __metadata("design:type", String)
], User.prototype, "username", void 0);
__decorate([
    (0, Orm_1.column)({ serializeAs: null }),
    __metadata("design:type", String)
], User.prototype, "password", void 0);
__decorate([
    (0, Orm_1.column)(),
    __metadata("design:type", String)
], User.prototype, "rememberMeToken", void 0);
__decorate([
    Orm_1.column.dateTime({ autoCreate: true }),
    __metadata("design:type", typeof (_a = typeof luxon_1.DateTime !== "undefined" && luxon_1.DateTime) === "function" ? _a : Object)
], User.prototype, "createdAt", void 0);
__decorate([
    Orm_1.column.dateTime({ autoCreate: true, autoUpdate: true }),
    __metadata("design:type", typeof (_b = typeof luxon_1.DateTime !== "undefined" && luxon_1.DateTime) === "function" ? _b : Object)
], User.prototype, "updatedAt", void 0);
__decorate([
    (0, Orm_1.column)(),
    __metadata("design:type", String)
], User.prototype, "name", void 0);
__decorate([
    (0, Orm_1.column)(),
    __metadata("design:type", String)
], User.prototype, "surname", void 0);
__decorate([
    (0, Orm_1.column)(),
    __metadata("design:type", Number)
], User.prototype, "age", void 0);
__decorate([
    (0, Orm_1.manyToMany)(() => Trip_1.default, {
        pivotForeignKey: 'user_id',
        localKey: 'id',
        relatedKey: 'id',
        pivotColumns: ['number_of_person'],
    }),
    __metadata("design:type", typeof (_c = typeof Orm_1.ManyToMany !== "undefined" && Orm_1.ManyToMany) === "function" ? _c : Object)
], User.prototype, "trip", void 0);
__decorate([
    (0, Orm_1.computed)(),
    __metadata("design:type", Number)
], User.prototype, "number_of_person", void 0);
__decorate([
    (0, Orm_1.beforeSave)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [User]),
    __metadata("design:returntype", Promise)
], User, "hashPassword", null);
exports.default = User;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVXNlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlVzZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsaUNBQWdDO0FBQ2hDLGtGQUF3QztBQUN4QyxpRkFBa0M7QUFFbEMsZ0VBTzhCO0FBRTlCLE1BQXFCLElBQUssU0FBUSxlQUFTO0lBb0JsQyxNQUFNLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBRSxJQUFVO1FBQzFDLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUU7WUFDeEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxNQUFNLGNBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFBO1NBQy9DO0lBQ0gsQ0FBQztDQXFCRjtBQTNDQztJQURDLElBQUEsWUFBTSxFQUFDLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDOztnQ0FDWDtBQUdqQjtJQURDLElBQUEsWUFBTSxHQUFFOztzQ0FDYztBQUd2QjtJQURDLElBQUEsWUFBTSxFQUFDLEVBQUUsV0FBVyxFQUFFLElBQUksRUFBRSxDQUFDOztzQ0FDUDtBQUd2QjtJQURDLElBQUEsWUFBTSxHQUFFOzs2Q0FDc0I7QUFHL0I7SUFEQyxZQUFNLENBQUMsUUFBUSxDQUFDLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxDQUFDO2tEQUNwQixnQkFBUSxvQkFBUixnQkFBUTt1Q0FBQTtBQUcxQjtJQURDLFlBQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsQ0FBQztrREFDdEMsZ0JBQVEsb0JBQVIsZ0JBQVE7dUNBQUE7QUFVMUI7SUFEQyxJQUFBLFlBQU0sR0FBRTs7a0NBQ1M7QUFHbEI7SUFEQyxJQUFBLFlBQU0sR0FBRTs7cUNBQ1k7QUFHckI7SUFEQyxJQUFBLFlBQU0sR0FBRTs7aUNBQ1E7QUFRakI7SUFOQyxJQUFBLGdCQUFVLEVBQUMsR0FBRyxFQUFFLENBQUMsY0FBSSxFQUFDO1FBQ3JCLGVBQWUsRUFBQyxTQUFTO1FBQ3pCLFFBQVEsRUFBQyxJQUFJO1FBQ2IsVUFBVSxFQUFFLElBQUk7UUFDaEIsWUFBWSxFQUFDLENBQUMsa0JBQWtCLENBQUM7S0FDbEMsQ0FBQztrREFDVyxnQkFBVSxvQkFBVixnQkFBVTtrQ0FBYTtBQUdwQztJQURDLElBQUEsY0FBUSxHQUFFOzs4Q0FDbUI7QUF4QjlCO0lBREMsSUFBQSxnQkFBVSxHQUFFOztxQ0FDMkIsSUFBSTs7OEJBSTNDO0FBeEJILHVCQTZDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERhdGVUaW1lIH0gZnJvbSAnbHV4b24nXG5pbXBvcnQgSGFzaCBmcm9tICdAaW9jOkFkb25pcy9Db3JlL0hhc2gnXG5pbXBvcnQgVHJpcCBmcm9tICdBcHAvTW9kZWxzL1RyaXAnXG5cbmltcG9ydCB7XG4gIGNvbHVtbixcbiAgYmVmb3JlU2F2ZSxcbiAgQmFzZU1vZGVsLFxuICBtYW55VG9NYW55LFxuICBNYW55VG9NYW55LFxuICBjb21wdXRlZFxufSBmcm9tICdAaW9jOkFkb25pcy9MdWNpZC9Pcm0nXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXIgZXh0ZW5kcyBCYXNlTW9kZWwge1xuICBAY29sdW1uKHsgaXNQcmltYXJ5OiB0cnVlIH0pXG4gIHB1YmxpYyBpZDogbnVtYmVyXG5cbiAgQGNvbHVtbigpXG4gIHB1YmxpYyB1c2VybmFtZTogc3RyaW5nXG5cbiAgQGNvbHVtbih7IHNlcmlhbGl6ZUFzOiBudWxsIH0pXG4gIHB1YmxpYyBwYXNzd29yZDogc3RyaW5nXG5cbiAgQGNvbHVtbigpXG4gIHB1YmxpYyByZW1lbWJlck1lVG9rZW4/OiBzdHJpbmdcblxuICBAY29sdW1uLmRhdGVUaW1lKHsgYXV0b0NyZWF0ZTogdHJ1ZSB9KVxuICBwdWJsaWMgY3JlYXRlZEF0OiBEYXRlVGltZVxuXG4gIEBjb2x1bW4uZGF0ZVRpbWUoeyBhdXRvQ3JlYXRlOiB0cnVlLCBhdXRvVXBkYXRlOiB0cnVlIH0pXG4gIHB1YmxpYyB1cGRhdGVkQXQ6IERhdGVUaW1lXG5cbiAgQGJlZm9yZVNhdmUoKVxuICBwdWJsaWMgc3RhdGljIGFzeW5jIGhhc2hQYXNzd29yZCAodXNlcjogVXNlcikge1xuICAgIGlmICh1c2VyLiRkaXJ0eS5wYXNzd29yZCkge1xuICAgICAgdXNlci5wYXNzd29yZCA9IGF3YWl0IEhhc2gubWFrZSh1c2VyLnBhc3N3b3JkKVxuICAgIH1cbiAgfVxuXG4gIEBjb2x1bW4oKVxuICBwdWJsaWMgbmFtZTpzdHJpbmdcblxuICBAY29sdW1uKCkgXG4gIHB1YmxpYyBzdXJuYW1lOnN0cmluZ1xuXG4gIEBjb2x1bW4oKVxuICBwdWJsaWMgYWdlOm51bWJlclxuICBcbiAgQG1hbnlUb01hbnkoKCkgPT4gVHJpcCx7XG4gICAgcGl2b3RGb3JlaWduS2V5Oid1c2VyX2lkJyxcbiAgICBsb2NhbEtleTonaWQnLFxuICAgIHJlbGF0ZWRLZXk6ICdpZCcsXG4gICAgcGl2b3RDb2x1bW5zOlsnbnVtYmVyX29mX3BlcnNvbiddLFxuICB9KVxuICBwdWJsaWMgdHJpcDogTWFueVRvTWFueTx0eXBlb2YgVHJpcD5cbiBcbiAgQGNvbXB1dGVkKClcbiAgcHVibGljIG51bWJlcl9vZl9wZXJzb246bnVtYmVyXG59XG4iXX0=